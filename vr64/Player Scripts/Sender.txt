print("Started")
local ServerURL = "" -- The Ngrok websocket server URL

local HttpService = game:GetService("HttpService")
local WebSocket = websocket.Connect(ServerURL)

local mt = getrawmetatable(game)
local namecall = mt.__namecall
setreadonly(mt,false)
mt.__namecall = newcclosure(function(self, ...)
	local args = {...}   
	if getnamecallmethod() == 'FireServer' and self.Name == 'replicate' then
		if not checkcaller() then
			return
		end
	end
	return namecall(self, table.unpack(args))
end)
setreadonly(mt,true)

function Register(Client0)
	local data = {
		["Reg1"] = Client0,
	}
	WebSocket:Send(HttpService:JSONEncode(data))
end

Register("Sender")

function SendTo(Client0, Instance0, Value0)
	local data = {
		["To1"] = Client0,
		["Instance1"] = Instance0,
		["Value1"] = Value0,
	}
	WebSocket:Send(HttpService:JSONEncode(data))
end

WebSocket.OnMessage:Connect(function(msg)
	local msgtable = HttpService:JSONDecode(msg)
	print("Got: ".. msgtable["Instance1"])
	if msgtable["Instance1"] == "VrPlayerPlam" then
		for i,v in pairs(msgtable) do
			print(tostring(i).. " = ".. tostring(v))
		end

		local editedValue = msgtable["Value1"]:gsub("SENDERGOESHERE", game.Players.LocalPlayer.Name)
		loadstring("workspace.share.replicate:FireServer(table.unpack({\n[1] = game.workspace.plam."..game.Players.LocalPlayer.Name .. msgtable["Value1"])()
	end
end)

chat = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.OnMessageDoneFiltering
chat.OnClientEvent:Connect(function(arg1, arg2)
	local chat = game.Players[arg1["FromSpeaker"]].DisplayName.. " ".. arg1["Message"]
	SendTo("Recorder", "PlayersChat", chat)
end)

--RS = game:GetService("RunService")
--RS.Stepped:Connect(function()
while wait(.15) do
	local PlamsCopied = "{"
	for i, plamcopy in pairs(game.workspace.plam:GetChildren()) do
		if plamcopy.Name ~= game.Players.LocalPlayer.Name then
			PlamsCopied = PlamsCopied.. "\n['"..plamcopy.Name.."'] = {"
			for i, plamvalue in pairs(plamcopy:GetChildren()) do
				if plamvalue.Name ~= "mps" and plamvalue.Name ~= "scale" then
					if plamvalue.ClassName == "CFrameValue" then
						PlamsCopied = PlamsCopied.. "\n['".. plamvalue.Name.. "'] = CFrame.new(".. tostring(plamvalue.Value).. "),"
					elseif plamvalue.ClassName == "StringValue" then
						PlamsCopied = PlamsCopied.. "\n['".. plamvalue.Name.. "'] = '".. tostring(plamvalue.Value).. "',"
					else
						PlamsCopied = PlamsCopied.. "\n['".. plamvalue.Name.. "'] = ".. tostring(plamvalue.Value).. ","
					end
				end
			end
			PlamsCopied = PlamsCopied.. "\n},"
		end
	end
	PlamsCopied = "game.Workspace.Server.plam:FireServer(".. PlamsCopied.. "\n}\n)"
	SendTo("Recorder", "PlayersPlam", PlamsCopied)
end
--end)

